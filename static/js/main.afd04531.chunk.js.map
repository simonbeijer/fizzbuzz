{"version":3,"sources":["components/inputField.js","components/message.js","components/window.js","components/highscore.js","components/chat.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","getInput","useState","inputValue","setInputValue","style","background","height","width","display","justifyContent","alignItems","onSubmit","e","preventDefault","value","onChange","target","type","color","padding","marginLeft","Message","children","bot","flexDirection","paddingBottom","borderRadius","marginRight","Window","msgArr","overflow","flexGrow","map","content","msg","key","Highscore","lastScore","localStorage","getItem","highScore","textAlign","Chat","setMsgArr","start","setStart","score","setScore","counter","setCounter","answerArr","setAnswerArr","createAnswerArray","arr","i","push","input","length","logic","setItem","Math","floor","random","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afd04531.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst InputField = ({ getInput }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const submit = (e) => {\n    e.preventDefault();\n    getInput(inputValue);\n    setInputValue(\"\");\n  };\n\n  return (\n    <div\n      style={{\n        background: \"#EBEBEB\",\n        height: \"80px\",\n        width: \"400px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <form onSubmit={submit}>\n        <input\n          value={inputValue}\n          onChange={(e) => {\n            setInputValue(e.target.value);\n          }}\n          style={{ width: \"300px\", height: \"2rem\" }}\n          type=\"text\"\n        ></input>\n        <input\n          style={{\n            color: \"white\",\n            background: \"black\",\n            padding: \"0.5rem\",\n            marginLeft: \"0.5rem\",\n          }}\n          type=\"submit\"\n          value=\"SEND\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default InputField;\n","import React from \"react\";\n\nconst Message = ({ children, bot }) => {\n  return (\n    <>\n      {bot ? (\n        <div\n          style={{\n            marginLeft: \"1rem\",\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            flexDirection: \"column\",\n          }}\n        >\n          <p style={{ color: \"grey\", paddingBottom: \"0.5rem\" }}>Bot</p>\n          <div\n            style={{\n              width: \"40%\",\n              background: \"darkgrey\",\n              borderRadius: \"50px\",\n            }}\n          >\n            <p style={{ padding: \"1rem\" }}>{children}</p>\n          </div>\n        </div>\n      ) : (\n        <div\n          style={{\n            marginRight: \"1rem\",\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <p\n              style={{\n                color: \"lightgrey\",\n                paddingBottom: \"0.5rem\",\n              }}\n            >\n              You\n            </p>\n            <div\n              style={{\n                background: \"darkgrey\",\n                borderRadius: \"50px\",\n              }}\n            >\n              <p style={{ padding: \"1rem\" }}>{children}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./message\";\nconst Window = ({ msgArr }) => {\n  return (\n    <div\n      style={{\n        background: \"white\",\n        height: \"500px\",\n        width: \"400px\",\n        overflow: \"scroll\",\n        flexGrow: \" 1\",\n      }}\n    >\n      {msgArr.map((content) => (\n        <Message key={content.key} bot={content.bot}>\n          {content.msg}\n        </Message>\n      ))}\n    </div>\n  );\n};\n\nexport default Window;\n","import React from \"react\";\nconst Highscore = () => {\n  const lastScore = localStorage.getItem(\"score\");\n  const highScore = localStorage.getItem(\"high-score\");\n\n  return (\n    <div\n      style={{\n        height: \"100px\",\n        width: \"400px\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        style={{\n          background: \"silver\",\n          height: \"100px\",\n          width: \"200px\",\n          textAlign: \"center\",\n        }}\n      >\n        <h6>Activ Score</h6>\n        {lastScore}\n      </div>\n      <div\n        style={{\n          background: \"gold\",\n          height: \"100px\",\n          width: \"200px\",\n          textAlign: \"center\",\n        }}\n      >\n        <h6>High Score</h6>\n        {highScore}\n      </div>\n    </div>\n  );\n};\n\nexport default Highscore;\n","import React, { useState } from \"react\";\nimport InputField from \"./inputField\";\nimport Window from \"./window\";\nimport Highscore from \"./highscore\";\n\nconst Chat = () => {\n  const [msgArr, setMsgArr] = useState([]);\n  const [start, setStart] = useState(false);\n  const [score, setScore] = useState(0);\n  const [counter, setCounter] = useState(0);\n  const [answerArr, setAnswerArr] = useState([]);\n\n  // Check the answer from array\n  const logic = (input) => {\n    if (input == answerArr[counter]) {\n      setMsgArr([\n        ...msgArr,\n        { key: msgArr.length, msg: input, bot: false },\n        { key: msgArr.length + 1, msg: answerArr[counter + 1], bot: true },\n      ]);\n      setCounter(counter + 2);\n    } else {\n      setMsgArr([\n        ...msgArr,\n        { key: msgArr.length, msg: input, bot: false },\n        {\n          key: msgArr.length + 1,\n          msg: \"Game over! Score: \" + score,\n          bot: true,\n        },\n      ]);\n    }\n  };\n\n  // Keep score in game\n  const gameScore = () => {\n    setScore(score + 1);\n\n    localStorage.setItem(\"score\", score);\n\n    if (score > localStorage.getItem(\"high-score\")) {\n      localStorage.setItem(\"high-score\", score);\n    }\n  };\n\n  // Get input and start game\n  const getInput = (input) => {\n    if (start) {\n      logic(input);\n      gameScore();\n    } else if (input === \"start\") {\n      if (!start) {\n        if (Math.floor(Math.random() * 2)) {\n          setMsgArr([\n            ...msgArr,\n            { key: 0, msg: input, bot: false },\n            { key: 0 + 1, msg: \"You start\", bot: true },\n          ]);\n        } else {\n          setMsgArr([\n            ...msgArr,\n            { key: 0, msg: input, bot: false },\n            { key: 0 + 1, msg: \"I Start\", bot: true },\n            { key: 0 + 2, msg: \"1\", bot: true },\n          ]);\n          setCounter(counter + 1);\n        }\n        setAnswerArr(createAnswerArray);\n        setStart(true);\n      }\n    } else {\n      setMsgArr([\n        { key: msgArr.length, msg: \"Write start to start game\", bot: true },\n      ]);\n    }\n  };\n\n  // Answer array\n  const createAnswerArray = () => {\n    const arr = [];\n    for (let i = 1; i <= 100; i++) {\n      if (i % 3 === 0 && i % 5 === 0) {\n        arr.push(\"fizzbuzz\");\n      } else if (i % 3 === 0) {\n        arr.push(\"fizz\");\n      } else if (i % 5 === 0) {\n        arr.push(\"buzz\");\n      } else {\n        arr.push(i);\n      }\n    }\n    return arr;\n  };\n\n  return (\n    <div style={{ height: \"600px\", width: \"400px\" }}>\n      <Highscore />\n      <Window msgArr={msgArr} />\n      <InputField getInput={getInput} />\n    </div>\n  );\n};\n\nexport default Chat;\n","import \"./App.css\";\nimport Chat from \"./components/chat\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chat />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}